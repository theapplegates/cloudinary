{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["InstallInput","React","useState","value","setValue","installGatbyPlugin","useMutation","onSubmit","evt","preventDefault","name","onChange","target","type","placeholder","DestroyButton","deleteGatsbyPlugin","aria-label","onClick","Index","useQuery","query","data","fetching","error","npmPackageJson","replace","allGatsbyPlugin","nodes","filter","plugin","indexOf","map","key","id","shadowedFiles","file","style","opacity","shadowableFiles"],"mappings":"2JAGMA,EAA6B,WAAM,MACbC,IAAMC,SAAN,IAAnBC,EADgC,KACzBC,EADyB,KAG9BC,EAAsBC,sBAAY,kUAHJ,GAqBvC,OACE,0BACEC,SAAU,SAACC,GACTA,EAAIC,iBACJJ,EAAmB,CACjBK,KAAMP,MAIV,0CAEE,2BACEA,MAAOA,EACPQ,SAAU,SAACH,GAAD,OAAeJ,EAASI,EAAII,OAAOT,QAC7CU,KAAK,OACLC,YAAY,0BAOhBC,EAA4C,SAAC,GAAa,IAAXL,EAAW,EAAXA,KAC1CM,EAAsBV,sBAAY,4WADmB,GAqB9D,OACE,4BACEW,aAAA,UAAsBP,EACtBQ,QAAS,WACPF,EAAmB,CAAEN,WAHzB,MA+EWS,UApEa,WAAM,MACIC,mBAAS,CAC3CC,MAAO,+QAFuB,GACvBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,SAAUC,EADO,EACPA,MAmBzB,OAAID,EAAiB,yCAEjBC,EAAc,yDAGhB,oCACE,4BAAKF,EAAKG,eAAetB,MAAMuB,QAAQ,SAAlC,KACL,uCACA,4BACGJ,EAAKK,gBAAgBC,MACnBC,OAAO,SAAAC,GAAM,OAA6C,IAAzCA,EAAOpB,KAAKqB,QAAZ,mBACjBC,IAAI,SAAAF,GAAM,OACT,wBAAIG,IAAKH,EAAOI,IACbJ,EAAOpB,KADV,IACgB,kBAACK,EAAD,CAAeL,KAAMoB,EAAOpB,WAIlD,kBAACV,EAAD,MACA,sCACA,4BACGsB,EAAKK,gBAAgBC,MACnBC,OAAO,SAAAC,GAAM,OAA4C,IAAxCA,EAAOpB,KAAKqB,QAAZ,kBACjBC,IAAI,SAAAF,GAAM,OACT,wBAAIG,IAAKH,EAAOI,IACd,iCACE,iCACGJ,EAAOpB,KADV,IACgB,kBAACK,EAAD,CAAeL,KAAMoB,EAAOpB,QAE5C,4BACGoB,EAAOK,cAAcH,IAAI,SAAAI,GAAI,OAC5B,wBAAIH,IAAKG,EAAMC,MAAO,CAAEC,QAAS,KAC9BF,EADH,iBAIDN,EAAOS,gBAAgBP,IAAI,SAAAI,GAAI,OAC9B,wBAAIH,IAAKG,GAAOA,WAQ9B,kBAACpC,EAAD","file":"component---src-pages-index-tsx-61c7b4ae488932b0d200.js","sourcesContent":["import React from \"react\"\nimport { useQuery, useMutation } from \"urql\"\n\nconst InstallInput: React.FC<{}> = () => {\n  const [value, setValue] = React.useState(``)\n\n  const [, installGatbyPlugin] = useMutation(`\n    mutation installGatsbyPlugin($name: String!) {\n      createNpmPackage(npmPackage: {\n        name: $name,\n        dependencyType: \"production\"\n      }) {\n        id\n        name\n      }\n      createGatsbyPlugin(gatsbyPlugin: {\n        name: $name\n      }) {\n        id\n        name\n      }\n    }\n  `)\n\n  return (\n    <form\n      onSubmit={(evt): void => {\n        evt.preventDefault()\n        installGatbyPlugin({\n          name: value,\n        })\n      }}\n    >\n      <label>\n        Install:\n        <input\n          value={value}\n          onChange={(evt): void => setValue(evt.target.value)}\n          type=\"text\"\n          placeholder=\"gatsby-plugin-cool\"\n        />\n      </label>\n    </form>\n  )\n}\n\nconst DestroyButton: React.FC<{ name: string }> = ({ name }) => {\n  const [, deleteGatsbyPlugin] = useMutation(`\n    mutation destroyGatsbyPlugin($name: String!) {\n      destroyNpmPackage(npmPackage: {\n        name: $name,\n        id: $name,\n        dependencyType: \"production\"\n      }) {\n        id\n        name\n      }\n      destroyGatsbyPlugin(gatsbyPlugin: {\n        name: $name,\n        id: $name\n      }) {\n        id\n        name\n      }\n    }\n  `)\n\n  return (\n    <button\n      aria-label={`Delete ${name}`}\n      onClick={(): void => {\n        deleteGatsbyPlugin({ name })\n      }}\n    >\n      X\n    </button>\n  )\n}\n\nconst Index: React.FC<{}> = () => {\n  const [{ data, fetching, error }] = useQuery({\n    query: `\n      {\n        allGatsbyPlugin {\n          nodes {\n            name\n            id\n            shadowedFiles\n            shadowableFiles\n          }\n        }\n        npmPackageJson(id: \"name\") {\n          name\n          value\n        }\n      }\n    `,\n  })\n\n  if (fetching) return <p>Loading...</p>\n\n  if (error) return <p>Oops something went wrong.</p>\n\n  return (\n    <>\n      <h1>{data.npmPackageJson.value.replace(/^\"|\"$/g, ``)}</h1>\n      <h2>Plugins</h2>\n      <ul>\n        {data.allGatsbyPlugin.nodes\n          .filter(plugin => plugin.name.indexOf(`gatsby-plugin`) === 0)\n          .map(plugin => (\n            <li key={plugin.id}>\n              {plugin.name} <DestroyButton name={plugin.name} />\n            </li>\n          ))}\n      </ul>\n      <InstallInput />\n      <h2>Themes</h2>\n      <ul>\n        {data.allGatsbyPlugin.nodes\n          .filter(plugin => plugin.name.indexOf(`gatsby-theme`) === 0)\n          .map(plugin => (\n            <li key={plugin.id}>\n              <details>\n                <summary>\n                  {plugin.name} <DestroyButton name={plugin.name} />\n                </summary>\n                <ul>\n                  {plugin.shadowedFiles.map(file => (\n                    <li key={file} style={{ opacity: 0.6 }}>\n                      {file} (shadowed)\n                    </li>\n                  ))}\n                  {plugin.shadowableFiles.map(file => (\n                    <li key={file}>{file}</li>\n                  ))}\n                </ul>\n              </details>\n            </li>\n          ))}\n      </ul>\n\n      <InstallInput />\n    </>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}